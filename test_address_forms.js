/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º –æ–±—Ä–∞—â–µ–Ω–∏—è
 */

const addressForms = require('./utils/addressForms');

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
const testMessages = [
  '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?',
  '–ß—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å–µ–π—á–∞—Å?',
  '–û–ø–∏—à–∏ —Ç–≤–æ–∏ –º—ã—Å–ª–∏ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç',
  '–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã',
  '–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑',
  '–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å, –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
  '–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ',
  '–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!',
  '–¢—ã –¥–µ–ª–∞–µ—à—å –æ—Ç–ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É',
  '–ü–æ–º–Ω–∏: –æ–ø–∏—Å—ã–≤–∞–π —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –±—ã–ª–æ –≤ –º–æ–º–µ–Ω—Ç —Å–∏–≥–Ω–∞–ª–∞'
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const testUsers = [
  { preferences: { addressForm: 'informal' } },
  { preferences: { addressForm: 'formal' } },
  { preferences: {} }, // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  null // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
];

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ñ–æ—Ä–º –æ–±—Ä–∞—â–µ–Ω–∏—è\n');

console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:');
testMessages.forEach((msg, index) => {
  console.log(`${index + 1}. ${msg}`);
});

console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π:\n');

testUsers.forEach((user, userIndex) => {
  const userType = user?.preferences?.addressForm || 'default/null';
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIndex + 1} (${userType}):`);
  
  testMessages.slice(0, 3).forEach((message, msgIndex) => {
    const formatted = addressForms.formatForUser(message, user);
    console.log(`  ${msgIndex + 1}. "${formatted}"`);
  });
  
  console.log('');
});

console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º—ã—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π:\n');

// –¢–µ—Å—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ
console.log('üì§ –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ ‚Üí –§–æ—Ä–º–∞–ª—å–Ω–æ–µ:');
testMessages.slice(0, 5).forEach((message, index) => {
  const formal = addressForms.convertToFormal(message);
  console.log(`${index + 1}. "${message}" ‚Üí "${formal}"`);
});

console.log('\nüì• –§–æ—Ä–º–∞–ª—å–Ω–æ–µ ‚Üí –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ:');
const formalMessages = [
  '–ö–∞–∫ –í—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ?',
  '–ß—Ç–æ –í—ã –¥–µ–ª–∞–µ—Ç–µ —Å–µ–π—á–∞—Å?',
  '–û–ø–∏—à–∏—Ç–µ –í–∞—à–∏ –º—ã—Å–ª–∏',
  '–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã',
  '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑'
];

formalMessages.forEach((message, index) => {
  const informal = addressForms.convertToInformal(message);
  console.log(`${index + 1}. "${message}" ‚Üí "${informal}"`);
});

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ç–µ—Å—Ç–∞—Ö
module.exports = {
  testMessages,
  testUsers,
  runTests: () => {
    console.log('–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤...');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const defaultUser = { preferences: {} };
    const result1 = addressForms.formatForUser('–ö–∞–∫ —Ç—ã –¥–µ–ª–∞?', defaultUser);
    console.assert(result1 === '–ö–∞–∫ —Ç—ã –¥–µ–ª–∞?', '–¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω: –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    const formalUser = { preferences: { addressForm: 'formal' } };
    const result2 = addressForms.formatForUser('–ö–∞–∫ —Ç—ã –¥–µ–ª–∞?', formalUser);
    console.assert(result2.includes('–í—ã'), '–¢–µ—Å—Ç 2 –ø—Ä–æ–≤–∞–ª–µ–Ω: —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ');
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ null –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const result3 = addressForms.formatForUser('–ö–∞–∫ —Ç—ã –¥–µ–ª–∞?', null);
    console.assert(result3 === '–ö–∞–∫ —Ç—ã –¥–µ–ª–∞?', '–¢–µ—Å—Ç 3 –ø—Ä–æ–≤–∞–ª–µ–Ω: null –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
    
    console.log('‚úÖ –í—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!');
  }
};
