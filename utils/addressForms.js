/**
 * Утилита для работы с формами обращения (ты/Вы)
 * Позволяет динамически переключаться между неформальным и формальным обращением
 */

class AddressForms {
  constructor() {
    // Словарь замен: неформальное -> формальное
    this.formalReplacements = {
      // Местоимения
      'ты': 'Вы',
      'тебя': 'Вас', 
      'тебе': 'Вам',
      'тобой': 'Вами',
      'тобою': 'Вами',
      
      // Притяжательные местоимения
      'твой': 'Ваш',
      'твоя': 'Ваша',
      'твоё': 'Ваше',
      'твои': 'Ваши',
      'твоего': 'Вашего',
      'твоей': 'Вашей',
      'твоему': 'Вашему',
      'твоим': 'Вашим',
      'твоими': 'Вашими',
      'твоих': 'Ваших',
      
      // Глагольные формы (2-е лицо ед.ч. -> мн.ч.)
      'делаешь': 'делаете',
      'видишь': 'видите',
      'слышишь': 'слышите',
      'чувствуешь': 'чувствуете',
      'думаешь': 'думаете',
      'знаешь': 'знаете',
      'понимаешь': 'понимаете',
      'можешь': 'можете',
      'хочешь': 'хотите',
      'идёшь': 'идёте',
      'говоришь': 'говорите',
      'работаешь': 'работаете',
      'учишься': 'учитесь',
      'отвечаешь': 'отвечаете',
      'описываешь': 'описываете',
      'наблюдаешь': 'наблюдаете',
      'практикуешься': 'практикуетесь',
      'стараешься': 'стараетесь',
      'пробуешь': 'пробуете',
      'попробуешь': 'попробуете',
      'сможешь': 'сможете',
      'будешь': 'будете',
      'сделаешь': 'сделаете',
      'получишь': 'получите',
      'найдёшь': 'найдёте',
      'заметишь': 'заметите',
      'различишь': 'различите',
      'научишься': 'научитесь',
      'продолжаешь': 'продолжаете',
      'используешь': 'используете',
      'помнишь': 'помните',
      'забываешь': 'забываете',
      'ошибаешься': 'ошибаетесь',
      'улучшаешься': 'улучшаетесь',
      'развиваешься': 'развиваетесь',
      'концентрируешься': 'концентрируетесь',
      'фокусируешься': 'фокусируетесь',
      'расслабляешься': 'расслабляетесь',
      'напрягаешься': 'напрягаетесь',
      'волнуешься': 'волнуетесь',
      'радуешься': 'радуетесь',
      'грустишь': 'грустите',
      'злишься': 'злитесь',
      'удивляешься': 'удивляетесь',
      'смеёшься': 'смеётесь',
      'плачешь': 'плачете',
      'спишь': 'спите',
      'просыпаешься': 'просыпаетесь',
      'встаёшь': 'встаёте',
      'ложишься': 'ложитесь',
      'сидишь': 'сидите',
      'стоишь': 'стоите',
      'лежишь': 'лежите',
      'ходишь': 'ходите',
      'бежишь': 'бежите',
      'едешь': 'едете',
      'летишь': 'летите',
      'плывёшь': 'плывёте',
      'читаешь': 'читаете',
      'пишешь': 'пишете',
      'рисуешь': 'рисуете',
      'играешь': 'играете',
      'поёшь': 'поёте',
      'танцуешь': 'танцуете',
      'готовишь': 'готовите',
      'ешь': 'едите',
      'пьёшь': 'пьёте',
      'покупаешь': 'покупаете',
      'продаёшь': 'продаёте',
      'строишь': 'строите',
      'ремонтируешь': 'ремонтируете',
      'убираешь': 'убираете',
      'моешь': 'моете',
      'стираешь': 'стираете',
      'гладишь': 'гладите',
      'шьёшь': 'шьёте',
      'вяжешь': 'вяжете',

      // Императивные формы (повелительное наклонение)
      'опиши': 'опишите',
      'расскажи': 'расскажите',
      'объясни': 'объясните',
      'покажи': 'покажите',
      'скажи': 'скажите',
      'ответь': 'ответьте',
      'выбери': 'выберите',
      'нажми': 'нажмите',
      'используй': 'используйте',
      'попробуй': 'попробуйте',
      'подожди': 'подождите',
      'проверь': 'проверьте',
      'посмотри': 'посмотрите',
      'найди': 'найдите',
      'введи': 'введите',
      'измени': 'измените',
      'сохрани': 'сохраните',
      'удали': 'удалите',
      'добавь': 'добавьте',
      'создай': 'создайте',
      'открой': 'откройте',
      'закрой': 'закройте',
      'продолжай': 'продолжайте',
      'останови': 'остановите',
      'начни': 'начните',
      'заверши': 'завершите',
      'помни': 'помните',
      'забудь': 'забудьте',
      'изучи': 'изучите',
      'прочитай': 'прочитайте',
      'напиши': 'напишите',
      'отправь': 'отправьте',
      'получи': 'получите',
      'прими': 'примите',
      'отклони': 'отклоните',
      'согласись': 'согласитесь',
      'откажись': 'откажитесь',
      'подтверди': 'подтвердите',
      'отмени': 'отмените'
    };
    
    // Обратный словарь для преобразования из формального в неформальное
    this.informalReplacements = {};
    for (const [informal, formal] of Object.entries(this.formalReplacements)) {
      this.informalReplacements[formal.toLowerCase()] = informal;
      this.informalReplacements[formal] = informal;
    }

    // Дополнительные формальные формы, которых нет в основном словаре
    const additionalFormalForms = {
      // Императивные формы (повелительное наклонение)
      'опишите': 'опиши',
      'расскажите': 'расскажи',
      'объясните': 'объясни',
      'покажите': 'покажи',
      'скажите': 'скажи',
      'ответьте': 'ответь',
      'выберите': 'выбери',
      'нажмите': 'нажми',
      'используйте': 'используй',
      'попробуйте': 'попробуй',
      'подождите': 'подожди',
      'проверьте': 'проверь',
      'посмотрите': 'посмотри',
      'найдите': 'найди',
      'введите': 'введи',
      'измените': 'измени',
      'сохраните': 'сохрани',
      'удалите': 'удали',
      'добавьте': 'добавь',
      'создайте': 'создай',
      'откройте': 'открой',
      'закройте': 'закрой',
      'продолжайте': 'продолжай',
      'остановите': 'останови',
      'начните': 'начни',
      'завершите': 'заверши',
      'помните': 'помни',
      'забудьте': 'забудь',
      'изучите': 'изучи',
      'прочитайте': 'прочитай',
      'напишите': 'напиши',
      'отправьте': 'отправь',
      'получите': 'получи',
      'примите': 'прими',
      'отклоните': 'отклони',
      'согласитесь': 'согласись',
      'откажитесь': 'откажись',
      'подтвердите': 'подтверди',
      'отмените': 'отмени'
    };

    // Добавляем дополнительные формы в словарь
    for (const [formal, informal] of Object.entries(additionalFormalForms)) {
      this.informalReplacements[formal] = informal;
      this.informalReplacements[formal.charAt(0).toUpperCase() + formal.slice(1)] =
        informal.charAt(0).toUpperCase() + informal.slice(1);
    }
  }

  /**
   * Преобразует текст в соответствии с предпочтением пользователя
   * @param {string} text - Исходный текст (в неформальном стиле)
   * @param {string} addressForm - 'informal' или 'formal'
   * @returns {string} - Преобразованный текст
   */
  formatText(text, addressForm = 'informal') {
    if (addressForm === 'informal') {
      return text; // Возвращаем как есть, так как по умолчанию используем неформальный стиль
    }
    
    if (addressForm === 'formal') {
      return this.convertToFormal(text);
    }
    
    return text;
  }

  /**
   * Преобразует неформальный текст в формальный
   * @param {string} text - Текст с неформальным обращением
   * @returns {string} - Текст с формальным обращением
   */
  convertToFormal(text) {
    let result = text;

    // Сортируем ключи по длине (сначала длинные) для корректной замены
    const sortedKeys = Object.keys(this.formalReplacements).sort((a, b) => b.length - a.length);

    for (const informal of sortedKeys) {
      const formal = this.formalReplacements[informal];

      // Создаем регулярное выражение для замены с учетом границ слов (для кириллицы)
      const regex = new RegExp(`(^|[\\s.,!?;:])${this.escapeRegExp(informal)}(?=[\\s.,!?;:]|$)`, 'gi');

      result = result.replace(regex, (match, prefix) => {
        const word = match.substring(prefix.length);
        // Сохраняем регистр первой буквы
        const replacement = word[0] === word[0].toUpperCase() ?
          formal.charAt(0).toUpperCase() + formal.slice(1) : formal;
        return prefix + replacement;
      });
    }

    return result;
  }

  /**
   * Преобразует формальный текст в неформальный
   * @param {string} text - Текст с формальным обращением
   * @returns {string} - Текст с неформальным обращением
   */
  convertToInformal(text) {
    let result = text;

    // Сортируем ключи по длине (сначала длинные) для корректной замены
    const sortedKeys = Object.keys(this.informalReplacements).sort((a, b) => b.length - a.length);

    for (const formal of sortedKeys) {
      const informal = this.informalReplacements[formal];

      // Создаем регулярное выражение для замены с учетом границ слов (для кириллицы)
      const regex = new RegExp(`(^|[\\s.,!?;:])${this.escapeRegExp(formal)}(?=[\\s.,!?;:]|$)`, 'gi');

      result = result.replace(regex, (match, prefix) => {
        const word = match.substring(prefix.length);
        // Сохраняем регистр первой буквы
        const replacement = word[0] === word[0].toUpperCase() ?
          informal.charAt(0).toUpperCase() + informal.slice(1) : informal;
        return prefix + replacement;
      });
    }

    return result;
  }

  /**
   * Экранирует специальные символы для регулярного выражения
   * @param {string} string - Строка для экранирования
   * @returns {string} - Экранированная строка
   */
  escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  }

  /**
   * Получает форму обращения пользователя из объекта пользователя
   * @param {Object} user - Объект пользователя
   * @returns {string} - 'informal' или 'formal'
   */
  getUserAddressForm(user) {
    return user?.preferences?.addressForm || 'informal';
  }

  /**
   * Форматирует сообщение для конкретного пользователя
   * @param {string} message - Сообщение (в неформальном стиле)
   * @param {Object} user - Объект пользователя
   * @returns {string} - Отформатированное сообщение
   */
  formatForUser(message, user) {
    const addressForm = this.getUserAddressForm(user);
    return this.formatText(message, addressForm);
  }
}

// Создаем единственный экземпляр для использования во всем приложении
const addressForms = new AddressForms();

module.exports = addressForms;
