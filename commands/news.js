const User = require('../models/User');
const addressForms = require('../utils/addressForms');

module.exports = {
  command: 'news',
  description: '–ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞',
  execute: async (bot, msg) => {
    const chatId = msg.chat.id;
    const telegramId = msg.from.id;
    
    try {
      const user = await User.findOne({ telegramId });
      
      const newsMessage = addressForms.formatForUser(`
üéâ <b>–ö—Ä—É–ø–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESM –±–æ—Ç–∞!</b>

–ú—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º! ü§ñ

üß† <b>–ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /insights:</b>
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
‚Ä¢ AI-–∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —ç–Ω–µ—Ä–≥–∏–∏
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è

üîÆ <b>–ß—Ç–æ —Ç–µ–ø–µ—Ä—å —É–º–µ–µ—Ç –±–æ—Ç:</b>

üìä <b>–ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤:</b>
‚Ä¢ –ù–∞–π–¥–µ—Ç —Ç–≤–æ–µ –ª—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–Ω—è –¥–ª—è —Ä–∞–±–æ—Ç—ã
‚Ä¢ –ü–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–≤—ã—à–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏—Ç –≤–ª–∏—è–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
‚Ä¢ –í—ã—è–≤–∏—Ç –Ω–µ–æ–±—ã—á–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏

ü§ñ <b>AI-–∏–Ω—Å–∞–π—Ç—ã:</b>
‚Ä¢ "–¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –≤ 14:00"
‚Ä¢ "–ü–æ—Ö–æ–∂–µ, —É —Ç–µ–±—è —Å–Ω–∏–∂–∞–µ—Ç—Å—è —ç–Ω–µ—Ä–≥–∏—è –≤ –ø—è—Ç–Ω–∏—Ü—É"
‚Ä¢ "–í—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å Flow —Å–æ—Å—Ç–æ—è–Ω–∏—è - —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è!"

üéÆ <b>–¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ:</b>
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ —Å—Ç—Ä–∏–∫–æ–≤ üèÜ
‚Ä¢ –ê–Ω–æ–Ω–∏–º–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üìä
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π üîÆ
‚Ä¢ –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∞–ª–µ—Ä—Ç—ã ‚ö†Ô∏è

üí° <b>–ö–∞–∫ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å:</b>
1. –û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å–æ–≤ (–º–∏–Ω–∏–º—É–º 10-15)
2. –ò—Å–ø–æ–ª—å–∑—É–π /insights –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
3. –ò–∑—É—á–∏ —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ /achievements
4. –ü–æ—Å–º–æ—Ç—Ä–∏ —Ä–µ–π—Ç–∏–Ω–≥–∏ –≤ /leaderboard

üåü <b>–ß–µ–º –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö - —Ç–µ–º —Ç–æ—á–Ω–µ–µ –∞–Ω–∞–ª–∏–∑!</b>
–ü—Ä–æ–¥–æ–ª–∂–∞–π –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–ø—Ä–æ—Å—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ, –∏ –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ—É—á–µ–º –ø–æ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é.

üöÄ <b>–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ!</b> 
–°–∫–æ—Ä–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –±–æ–ª—å—à–µ —É–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–µ–±—è.

<i>–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ESM –±–æ—Ç–∞</i> üíô`, user);

      const keyboard = {
        inline_keyboard: [
          [
            { text: 'üß† –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–Ω—Å–∞–π—Ç—ã', callback_data: 'try_insights' },
            { text: 'üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', callback_data: 'try_achievements' }
          ],
          [
            { text: 'üìä –†–µ–π—Ç–∏–Ω–≥–∏', callback_data: 'try_leaderboard' },
            { text: 'üîî –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å', callback_data: 'try_survey' }
          ],
          [
            { text: 'üìö –ü–æ–º–æ—â—å', callback_data: 'show_help' },
            { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å', callback_data: 'close_news' }
          ]
        ]
      };

      await bot.sendMessage(chatId, newsMessage, {
        parse_mode: 'HTML',
        reply_markup: keyboard
      });

    } catch (error) {
      console.error('Error in news command:', error);
      const fallbackMessage = `
üéâ <b>–ö—Ä—É–ø–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESM –±–æ—Ç–∞!</b>

–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –ò–ò! ü§ñ

üß† –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /insights - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
‚Ä¢ /achievements - —Ç–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è  
‚Ä¢ /leaderboard - —Ä–µ–π—Ç–∏–Ω–≥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

üí° –ü–æ–ø—Ä–æ–±—É–π /insights –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–ø—Ä–æ—Å–æ–≤!`;

      bot.sendMessage(chatId, fallbackMessage, { parse_mode: 'HTML' });
    }
  },

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
  handleCallback: async (bot, query) => {
    const chatId = query.message.chat.id;
    const action = query.data;

    try {
      await bot.answerCallbackQuery(query.id);

      switch (action) {
        case 'try_insights':
          const insightsCommand = require('./insights');
          await insightsCommand.execute(bot, query.message);
          break;

        case 'try_achievements':
          const achievementsCommand = require('./achievements');
          await achievementsCommand.execute(bot, query.message);
          break;

        case 'try_leaderboard':
          const leaderboardCommand = require('./leaderboard');
          await leaderboardCommand.execute(bot, query.message);
          break;

        case 'try_survey':
          const surveyCommand = require('./survey');
          await surveyCommand.execute(bot, query.message);
          break;

        case 'show_help':
          const helpCommand = require('./help');
          await helpCommand.execute(bot, query.message);
          break;

        case 'close_news':
          await bot.editMessageText(
            '‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞–∫—Ä—ã—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π /news —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–Ω–æ–≤–∞!',
            {
              chat_id: chatId,
              message_id: query.message.message_id
            }
          );
          break;

        default:
          await bot.sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
      }
    } catch (error) {
      console.error('Error in news callback:', error);
      await bot.answerCallbackQuery(query.id, { text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞' });
    }
  }
};