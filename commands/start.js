const User = require('../models/User');
const addressForms = require('../utils/addressForms');

module.exports = {
  command: 'start',
  description: 'Start the bot and show welcome message',
  execute: async (bot, msg) => {
    const chatId = msg.chat.id;
    const telegramId = msg.from.id;
    const userName = msg.from.first_name || 'User';
    
    try {
      let user = await User.findOne({ telegramId });
      
      if (!user) {
        user = new User({
          telegramId,
          username: msg.from.username,
          firstName: msg.from.first_name,
          lastName: msg.from.last_name
        });
        await user.save();
      }
      
      const welcomeMessage = addressForms.formatForUser(
        `–ü—Ä–∏–≤–µ—Ç ${userName}! üëã\n\n` +
        `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MSE Bot - –±–æ—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–ø—ã—Ç–∞!\n\n` +
        `–Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –æ–ø—Ä–æ—Å—ã –≤ —Å–ª—É—á–∞–π–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –¥–Ω—è, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –∏–∑—É—á–∏—Ç—å —Ç–≤–æ–∏ –º—ã—Å–ª–∏, —á—É–≤—Å—Ç–≤–∞ –∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.\n\n` +
        `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (6 —Ä–∞–∑ –≤ –¥–µ–Ω—å —Å 9:00 –¥–æ 21:00).\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π /settings –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.\n\n` +
        `‚åö <b>–ù–æ–≤–∏–Ω–∫–∞:</b> /pushover - –Ω–∞—Å—Ç—Ä–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —á–∞—Å—ã Garmin/Apple Watch!\n\n` +
        `–ö–æ–º–∞–Ω–¥—ã:\n` +
        `/survey - –Ω–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å —Å–µ–π—á–∞—Å\n` +
        `/stats - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n` +
        `/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n` +
        `/pushover - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —á–∞—Å—ã üÜï\n` +
        `/help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã\n\n` +
        `üí° –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —è –æ–±—Ä–∞—â–∞—é—Å—å –Ω–∞ "—Ç—ã". –ï—Å–ª–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å "–í—ã", –∏—Å–ø–æ–ª—å–∑—É–π /settings`,
        user
      );
      
      const keyboard = {
        reply_markup: {
          keyboard: [
            ['üìö –ü–æ–º–æ—â—å', 'üìä –ü–∞–º—è—Ç–∫–∞'],
            ['üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'üîî –û–ø—Ä–æ—Å']
          ],
          resize_keyboard: true,
          one_time_keyboard: false
        }
      };
      
      await bot.sendMessage(chatId, welcomeMessage, { ...keyboard, parse_mode: 'HTML' });
      
      // –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
      if (!user.seenLatestNews) {
        setTimeout(async () => {
          const newsCommand = require('./news');
          await newsCommand.execute(bot, msg);
          
          // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª –Ω–æ–≤–æ—Å—Ç–∏
          user.seenLatestNews = true;
          await user.save();
        }, 3000);
      }
    } catch (error) {
      console.error('Error in start command:', error);
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  }
};